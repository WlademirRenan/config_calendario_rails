#------------------------------------------------------------------------------
# Installation DateTimePicker
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Gemfile
#------------------------------------------------------------------------------
gem 'momentjs-rails', '>= 2.9.0'
gem 'bootstrap3-datetimepicker-rails', '~> 4.17.47'

And then execute:

$ bundle


#------------------------------------------------------------------------------
# app/assets/javascripts/application.js
#------------------------------------------------------------------------------
Add the following to your JavaScript manifest file (application.js):

//= require moment
//= require moment/pt-br
//= require bootstrap-datetimepicker


jQuery(document).ready(function(){
  $('.datetimepicker').datetimepicker({	
    locale: 'pt-br',
    format: 'DD/MM/YYYY'
  });
})



#------------------------------------------------------------------------------
# app/assets/stylesheets/application.css.scss
#------------------------------------------------------------------------------
If you are using SCSS, modify your application.css.scss

// import bootstrap-sprockets before bootstrap if using bootstrap >= 3.2
@import 'bootstrap-sprockets';
@import 'bootstrap';
@import 'bootstrap-datetimepicker';

If you're using plain CSS, modify your application.css

*= require bootstrap
*= require bootstrap-datetimepicker


#------------------------------------------------------------------------------
# app/inputs/date_time_picker_input.rb
#------------------------------------------------------------------------------
class DateTimePickerInput < SimpleForm::Inputs::Base
  def input
    set_value_html_option

    template.content_tag(:div, class: 'input-group date datetimepicker') do
      template.concat @builder.text_field(attribute_name, input_html_options)
      template.concat span_table
    end
  end

  def input_html_options
    classes = (super[:class] || [])
    classes << :'form-control'
    classes << 'input-group-addon'
    classes.uniq!
    options = super
    options.merge({class: classes})
    options.merge({readonly: false}) unless options[:readonly]
    options
  end

  def span_table
    template.content_tag(:span, class: 'input-group-addon') do
      template.concat icon_table
    end
  end

  def icon_table
    "<span class='glyphicon glyphicon-calendar'></span>".html_safe
  end

 def set_value_html_option
    return unless value.present?
    input_html_options[:value] ||= I18n.localize(value, format: display_pattern)
  end

  def value
    object.send(attribute_name) if object.respond_to? attribute_name
  end

  def display_pattern
    I18n.t('datepicker.dformat', default: '%d/%m/%Y')
  end
end



#------------------------------------------------------------------------------
# Utilizando na view com simple form
#------------------------------------------------------------------------------
<%= f.input :data_inicio, :as => :date_time_picker, label: 'Data Inicio' %>



#------------------------------------------------------------------------------
# Utilizando na view com html puro
#------------------------------------------------------------------------------
<div class="form-group">
  <div class='input-group date datetimepicker'>
    <input type='text' class="form-control" />
    <span class="input-group-addon">
      <span class="glyphicon glyphicon-calendar"></span>
    </span>
  </div>
</div>
   


